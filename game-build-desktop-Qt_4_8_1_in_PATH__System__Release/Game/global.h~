/*
 * global.h
 *
 *  Created on: Aug 8, 2013
 *      Author: cs1120224
 */

#ifndef GLOBAL_H_
#define GLOBAL_H_
#include "obj1.h"
#include<iostream>
#include <utility>
#include <queue>
#include<vector>
using namespace std;
#include "Object.h"
#include <time.h>
#define PI 3.14159265
#define refreshMills 10
//#define SCALE 10
#define HEIGHTSCALE 0.25
extern bool win;																	//!< Win variable : takes value 'true' when the game has ended.
extern queue<pair<float,float> > checkpoints;										//!< Queue in which checkpoints are stored. 
extern pair<char[50],int> trackhigh[6];												//!< Maintains top 6 name - high score pairs 
extern int scores[6];																//!< 
extern float theta;																	//!< Spherical coordinate theta of camera with respect to bike
extern float phi;																	//!< Spherical coordinate phi of camera with respect to bike (from z axis)
extern float camx;																	//!< X Coordinate of camera with respect to bike
extern float camy;																	//!< Y Coordinate of camera with respect to bike
extern float camz;																	//!< Z Coordinate of camera with respect to bike
extern float rad_sphere;															//!< Distance of camera from bike
extern float thetaplus;																//!< Modifier for bike rotation
extern bool my_key_left;															//!< 
extern bool my_key_up;																//!<
extern bool my_key_right;															//!<
extern bool my_key_down;															//!<
extern string dirname;																//!<
extern char playername[50];															//!< Current player's name
extern bool keyStates[255];															//!< Bool array which keeps track of the simultaneous keys pressed at the same time
extern bool camType;																//!<
extern bool bikerView;																//!< Camera changes to biker view when it takes 'true' value
extern bool fullscreen;																//!< Screen changes to full screen when it takes 'true' value
extern bool GameMode;																//!<
extern terrain a;																	//!< Object of terrain class. It reads the .bmp files (heightmap and texture) and renders the terrain.
extern Object car;																	//!< Object for vehicle on the terrain
extern vector<Object> hurdle;														//!<
extern vector<Vector3D> markers;													//!<
extern int cou;																		//!<
extern int SCALE;																	//!< It scales the terrain to the given scale
extern int gameTime;																//!<
extern int trackid;																	//!< It takes separate value for different tracks.
extern float frustum[6][4];															//!< 
extern float points;																//!< Maintains the score of the game throughout the game time and is displayed on the HUD.
extern float dist;																	//!<
extern int trackbesttime[6];														//!<
extern bool paused;																	//!< The game pausees to the current state when pause is true.
extern int BikeType;																//!< It takes separate value for different bikes. It can be toggled at runtime.
extern int markercount;																//!<
extern int MaxCalpha ,time;																//!<



#endif /* GLOBAL_H_ */
